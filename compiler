#!/bin/sh
#          __ _| | _____  ____ _ _ __   __| | ___ _ __ 
#         / _` | |/ _ \ \/ / _` | '_ \ / _` |/ _ \ '__|
#        | (_| | |  __/>  < (_| | | | | (_| |  __/ |   
#         \__,_|_|\___/_/\_\__,_|_| |_|\__,_|\___|_|   
#
# created by alexander bailey (https://github.com/kingston802)
# heavily inspired by luke smith's compiler script
# this is a more personal version for me
# this script will compile or perform running operations on a document
# compiles: .tex, .md
# compiles and runs: .cpp, .c
# runs: .py, .rb, .go, 
# opens: .html

file=$(readlink -f "$1")
base="${file%.*}"

# check requirements
check () {
    error="Requires foo but it's not installed. Aborting."
    command -v $1 >/dev/null 2>&1 || { echo >&2 ${error/foo/$1}; exit 1; }
}

case "$file" in 
    *\.tex) check pdflatex && pdflatex "$file" ;;
    *\.md) check pandoc && pandoc "$file" -o "$base".pdf ;;
    *\.cpp) check g++ && g++ -Wall -std=c++11 -g "$file" -o "$base" && "$base" ;;
    *\.c) check cc && cc "$file" -o "$base" && "$base" ;;
    *\.py) check python && python "$file" ;;
    *\.rb) check ruby && ruby "$file" ;;
    *\.go) check go && go run "$file" ;;
    *\.html) check && brave $file ;;
    # *\.) check && $file ;;
esac
